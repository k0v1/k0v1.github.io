/* TODO */
/* 
x optimize '*-pos' transitions
x recreate compositions with '*-pos' instead of depth
x simplify colors
x simplify gradients
- create new inital state
- move transitions under a media query
*/

/* ========================================================================== */
/* # Transition timing config */
/* ========================================================================== */

:root {
  --transition-duration: 1.25s;
  --transition-easing: ease-in-out;
}

/* ========================================================================== */
/* # Homepage navigation states */
/* ========================================================================== */

/* ## Initial state
/* ========================================================================== */
#background-scene {
  & > #k0v1 {
    transform:
      var(--_v-center-composition)
      scale3d(3, 3, 3)
    ;
  }
}

/* ## Design
/* ========================================================================== */
body:has(details[name="nav"][id="design"][open]) #background-scene {
  & > #k0v1 {
    transform:
      rotateY(225deg)
      rotateX(0)
      translateY(-0.65em)
      scale3d(1.5, 1.5, 1.5)
    ;
    & > #ascender {
      transform:
        translate(-0.707em, -0.707em)
        rotateZ(45deg)
        translateZ(-0.25em) /* always changes */
      ;
    }
    & > #arm {
      transform:
      rotateZ(-45deg)
      translateZ(0.75em) /* always changes */
    ;
    }
    & > #stem {
      transform:
        translate(-1.15em, 1.15em)
        rotateZ(-135deg)
        translateZ(-0.5em) /* always changes */
      ;
    }
    & > #leg {
      transform:
        translate(0.5em, calc(1.205em))
        rotateZ(0deg)
        translateZ(-0.36em) /* always changes */
      ;
    }
  }
}

/* ## Music
/* ========================================================================== */
body:has(details[name="nav"][id="music"][open]) #background-scene {
  & > #k0v1 {
    transform:
      rotateY(45deg)
      rotateX(45deg)
      translateY(0em)
      scale3d(1, 1, 1)
    ;
    & > #ascender {
      transform:
        translate(-0.707em, -0.707em)
        rotateZ(45deg)
        translateZ(0.5em) /* always changes */
      ;
    }
    & > #arm {
      transform:
        rotateZ(-45deg)
        translateZ(0em) /* always changes */
      ;
    }
    & > #stem {
      transform:
        translate(-1.15em, 1.15em)
        rotateZ(-135deg)
        translateZ(-1em)  /* always changes */
      ;
    }
    & > #leg {
      transform:
        translate(0.5em, calc(1.205em))
        rotateZ(0deg)
        translateZ(-0.5em) /* always changes */
      ;
    }
  }
}

/* ## Art
/* ========================================================================== */
body:has(details[name="nav"][id="art"][open]) #background-scene {
  & > #k0v1 {
    transform:
      rotateY(-135.5deg)
      rotateX(81deg)
      var(--_v-center-composition)
      scale3d(1.5, 1.5, 1.5)
    ;
    & > #ascender {
      transform:
        translate(-0.707em, -0.707em)
        rotateZ(45deg)
        translateZ(0em) /* always changes */
      ;
    }
    & > #arm {
      transform:
        rotateZ(-45deg)
        translateZ(-0.75em) /* always changes */
      ;
    }
    & > #stem {
      transform:
        translate(-1.15em, 1.15em)
        rotateZ(-135deg)
        translateZ(0.25em) /* always changes */
      ;
    }
    & > #leg {
      transform:
        translate(0.5em, calc(1.205em))
        rotateZ(0deg)
        translateZ(-0.25em) /* always changes */
      ;
    }
  }
}

/* ## About
/* ========================================================================== */
body:has(details[name="nav"][id="about"][open]) #background-scene {
  & > #k0v1 {
    transform:
      rotateY(-45deg)
      rotateX(0)
      var(--_v-center-composition)
      translateX(0.25em)
      scale3d(0.75, 0.75, 0.75)
    ;
    & > * > .front {
      opacity: 1;
    }
  }
}

/* ========================================================================== */
/* # Background scene */
/* ========================================================================== */
#background-scene {
/* ## Config
/* ========================================================================== */
  --_unit: min(35vh, 35vw); /* This equals '1em'. */
  --_scene-height: 100svh;
  --_scene-width: 100svw;

  --_background-color: var(--color-background);
  --_foreground-color: var(--color-foreground);

/* ## Utilities
/* ========================================================================== */
  --_center-face: translate(-50%, -50%);
  --_v-center-composition: translateY(-0.22em);

/* ## Actual properties
/* ========================================================================== */
  background-color: var(--_background-color);
  font-size: var(--_unit);
  grid-area: background-scene; /* under homepage navigation */
  min-height: var(--_scene-height);
  min-width: var(--_scene-width);
  overflow: hidden;
  perspective: 100em;
  perspective-origin: 50% 50%;
  position: relative;
  z-index: -1; /* under homepage navigation */
  & > #k0v1 {
    transform-style: preserve-3d;
    transition: transform var(--transition-duration) var(--transition-easing);
    & > :is(#ascender, #stem, #arm, #leg) {
      transition: transform var(--transition-duration) var(--transition-easing);
      & >  .front {
        transition: opacity var(--transition-duration) var(--transition-easing);
      }
    }
  }
}

#background-scene * {
  position: absolute;
  top: 50%;
  left: 50%;
}

/* Matching coordinate systems */
.center { transform: var(--_center-face); }
.center, .center > * { transform-style: preserve-3d; }

/* ## Assembly
/* ========================================================================== */
/*
  - Both the ascender, arm, leg, and stem are instances of the same triangular prism.
  - Only the front and the three sides are used.
*/
/* Common face properties */
.front, .side-01, .side-02, .side-03 {
  background: linear-gradient(90deg, var(--_foreground-color), 25%, var(--_background-color)); /* overriden at '.front' */
  width: 1em;
  height: 1em; /* overriden at '.side-03' */
}

/* Constructing the prisms */
.front {
  background: var(--_foreground-color);
  opacity: 0.55;
  clip-path: polygon(0 0, 100% 100%, 0 100%);
  transform:
    var(--_center-face)
    translateZ(0.5em)
  ;
}

.side-01 {
  opacity: 0.40;
  transform:
    var(--_center-face)
    translate(-0.5em, 0)
    rotateY(-90deg)
    rotateZ(180deg)
  ;
}

.side-02 {
  opacity: 0.25;
  transform:
    var(--_center-face)
    translate(0, 0.5em)
    rotateY(90deg)
    rotateX(-90deg)
  ;
}

.side-03 {
  height: 1.414em;
  opacity: 0.10;
  transform:
    var(--_center-face)
    rotateZ(45deg)
    rotateY(90deg)
    rotateX(90deg)
  ;
}

/* Positioning the prism instances */
#ascender {
  transform:
    translate(-0.707em, -0.707em)
    rotateZ(45deg)
  ;
}

#arm {
  transform:
    rotateZ(-45deg)
  ;
}

#stem {
  transform:
    translate(-1.15em, 1.15em)
    rotateZ(-135deg)
  ;
}

#leg {
  transform:
    translate(0.5em, calc(1.205em))
    rotateZ(0deg)
  ;
}