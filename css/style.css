/* TODO */
/* 
x outlined text
x proper states for nav
x about spacing
x about content
- linking behance, etc.
- transitions
x merge the 3d scene for the background
x create infinite animations of orbit-x and depth-mod (@property)
x animate usin :has()
x text color should be the inverse of the background content
x change Inter to Archivo
- max font size too big for mobile
X transition glitch at 'art'
- general cleanup and comments pls
- header skews the composition on 'about'
- chrome for ubuntu renders 3d sluggish af compared to firefox (O_O)
- need dedicated close button inside every 'details'
*/

/* ========================================================================== */
/* # Reset */
/* ========================================================================== */

@import url("/css/reset.css");

/* ========================================================================== */
/* # Background props for transitions */
/* ========================================================================== */

@property --orbit-x {
  initial-value: 0.125;
  inherits: false;
  syntax: '<number>';
}

@property --orbit-y {
  initial-value: 0;
  inherits: false;
  syntax: '<number>';
}

@property --pan-y {
  initial-value: 0;
  inherits: false;
  syntax: '<number>';
}

@property --zoom {
  initial-value: 1;
  inherits: false;
  syntax: '<number>';
}

@property --perspective {
  initial-value: 0.25;
  inherits: false;
  syntax: '<number>';
}

@property --depth-mod {
  initial-value: 0;
  inherits: false;
  syntax: '<number>';
}

@property --ascender-pos {
  initial-value: 0;
  inherits: false;
  syntax: '<number>';
}

@property --stem-pos {
  initial-value: 0;
  inherits: false;
  syntax: '<number>';
}

@property --arm-pos {
  initial-value: 0;
  inherits: false;
  syntax: '<number>';
}

@property --leg-pos {
  initial-value: 0;
  inherits: false;
  syntax: '<number>';
}

/* ========================================================================== */
/* # Config */
/* ========================================================================== */

:root {
  --font-sans: Archivo, sans-serif;
  --font-mono: Space Mono, monospace;

  --fs-min: 0.875rem;
  --fs-mid: 1.5rem;
  --fs-max: max(min(1.25rem + 22.5svh, 1.25rem + 12.5svw), 4rem);

  --spacing-min: clamp(0rem, 0.25rem + 2vw, 50rem);

  --foreground-color: light-dark(#121212, #e0e0e0);
  --background-color: light-dark(#e0e0e0, #121212);
}

/* ========================================================================== */
/* # General styles */
/* ========================================================================== */

@font-face {
  font-display: swap;
  font-family: 'Inter';
  font-weight: 100 900;
  src: url('/fonts/Inter-VariableFont_opsz\,wght.ttf') format(truetype);
}

@font-face {
  font-display: swap;
  font-family: 'Archivo';
  font-weight: 100 900;
  src: url('/fonts/Archivo-VariableFont_wdth\,wght.ttf') format(truetype);
}

@font-face {
  font-display: swap;
  font-family: 'Space Mono';
  font-weight: 400;
  src: url('/fonts/space-mono-latin-400.woff2') format(truetype);
}

html {
  color-scheme: light dark;
}

*,
*::after,
*::before {
  box-sizing: border-box;
  font: inherit;
  margin: 0;
  padding: 0;
}

body {
  background-color: var(--background-color);
  color: var(--_foreground-color);
  display: grid;
  font-family: var(--font-sans);
  font-size: var(--fs-mid);
  grid-template-areas: "a";
  line-height: 1.3;
  min-height: 100svh;
}

main {
  grid-area: a;
  padding: var(--spacing-min);
}

main:has(details[name="nav"][open]) > details[name="nav"]:not([open]) {
  display: none;
}

details[name="nav"] {
  summary {
    color: transparent;
    font-size: var(--fs-max);
    font-weight: 900;
    font-variation-settings: "wdth" 125;
    letter-spacing: -0.05em;
    line-height: 0.8;
    mix-blend-mode: difference;
    -webkit-text-stroke: 2px var(--foreground-color);
    text-transform: uppercase;
    list-style-type: none;
    user-select: none;
  }

  ul {
    mix-blend-mode: difference;
    list-style-type: none;
    padding: var(--spacing-min);
  }

  a {
    color: inherit;
    text-decoration: none;
    &:visited {
      color: inherit;
    }
    &:hover {
      color: var(--foreground-color);
    }
  }

  &[open] {
    summary {
      color: var(--foreground-color);
      text-shadow: none;
    }
  }
}

/* ========================================================================== */
/* # Background transition states */
/* ========================================================================== */

body:has(details[name="nav"][id="design"][open]) #scene {
  --orbit-x: 0.625;
  --orbit-y: 0;
  --pan-y: 0;
  --zoom: 0.625;
  --perspective: 1;
  --depth-mod: 0.75;
}

body:has(details[name="nav"][id="music"][open]) #scene {
  --orbit-x: 0.125;
  --orbit-y: 0.125;
  --pan-y: 0;
  --zoom: 0.5;
  --perspective: 0.01;
  --depth-mod: 0.25;
}

body:has(details[name="nav"][id="art"][open]) #scene {
  --orbit-x: -0.375;
  --orbit-y: 0.225;
  --pan-y: 0.125;
  --zoom: 0.5;
  --perspective: 0.01;
  --depth-mod: 0.25;
  --leg-pos: -0.25;
  --arm-pos: -1;
  --stem-pos: 0.25;
  --ascender-pos: 0.25;
}

body:has(details[name="nav"][id="about"][open]) #scene {
  --orbit-x: -0.125;
  --orbit-y: 0;
  --pan-y: 0.0;
  --zoom: 0.25;
  --perspective: 0.01;
  --depth-mod: 0.5;
}

/* ========================================================================== */
/* # Background */
/* ========================================================================== */
#scene {
/* ## Input
/* ========================================================================== */
  --_rotate-y: var(--orbit-x);
  --_rotate-x: var(--orbit-y);
  --_pan-y: var(--pan-y);
  --_zoom: var(--zoom);
  --_perspective: var(--perspective);
  --_ascender-depth: calc(0.75em + sin(-1 * 360deg * var(--depth-mod)) * cos(180deg * 2 * (var(--depth-mod) + 0.25)) * 0.5em);
  --_stem-depth: calc(0.75em + sin(-1 * 360deg * var(--depth-mod)) * sin(360deg * 2 * (var(--depth-mod) + 0.25)) * 0.5em);
  --_arm-depth: calc(0.75em + sin(360deg * 2 * (var(--depth-mod) + 0.25)) * 0.5em);
  --_leg-depth: calc(0.75em + cos(180deg * 2 * (var(--depth-mod) + 0.25)) * 0.5em);
  --_ascender-pos: calc(1em * var(--ascender-pos));
  --_stem-pos: calc(1em * var(--stem-pos));
  --_arm-pos: calc(1em * var(--arm-pos));
  --_leg-pos: calc(1em * var(--leg-pos));

  --_orbit-duration: 0.75s;
  --_depth-mod-duration: 1.25s;
  --_zoom-duration: 1s;

/* ## Config
/* ========================================================================== */
  --_unit: min(35vh, 35vw); /* This equals '1em'. */
  --_scene-height: 100svh;
  --_scene-width: 100svw;

  --_background-color: light-dark(#e0e0e0e0, #121212);
  --_foreground-color: light-dark(#757575, #e0e0e0);

  --_front-color: hsl(from var(--_foreground-color) h s l / 1);
  --_sides-gradient: linear-gradient(90deg, hsl(from var(--_foreground-color) h s l / 0.5), 25%, hsl(from var(--_background-color) h s l / 0));

/* ## Utility
/* ========================================================================== */
  --_center-face: translate(-50%, -50%);

/* ## Actual properties
/* ========================================================================== */
  background-color: var(--_background-color);
  /* clip-path: circle(calc(0.5 * 1em)); */
  font-size: var(--_unit);
  grid-area: a;
  min-height: var(--_scene-height);
  min-width: var(--_scene-width);
  overflow: hidden;
  perspective: calc(500em * var(--_perspective));
  perspective-origin: 50% 50%;
  position: relative;
  transition:
  --orbit-x var(--_orbit-duration) ease,
  --orbit-y var(--_orbit-duration) ease,
  --pan-y var(--_orbit-duration) ease,
  --zoom var(--_zoom-duration) ease,
  --perspective var(--_zoom-duration) ease,
  --depth-mod var(--_depth-mod-duration) ease,
  --ascender-pos var(--_depth-mod-duration) ease,
  --stem-pos var(--_depth-mod-duration) ease,
  --arm-pos var(--_depth-mod-duration) ease,
  --leg-pos var(--_depth-mod-duration) ease
;
  z-index: -1;
}

#scene * {
  position: absolute;
  top: 50%;
  left: 50%;
}

/* ## Logo
/* ========================================================================== */
/* Camera rotation and vertical centering */
#k0v1 {
  /* right: 0%; */
  transform:
    rotateY(calc(var(--_rotate-y) * 360deg))
    rotateX(calc(var(--_rotate-x) * 360deg))
    translateY(-0.22em)
    /* translateY(-0.68em) */ /* for clipping with circle */
    /* translateX(0.06em) */ /* for clipping with circle */
    translateY(calc(var(--_pan-y) * 5em))
    scale3d(calc(var(--_zoom) * 3), calc(var(--_zoom) * 3), calc(var(--_zoom) * 3))
  ;
  transform-style: preserve-3d;
}

/* Matching coordinate systems */
.center { transform: var(--_center-face); }
.center, .center > * { transform-style: preserve-3d; }

/* ## Assembly
/* ========================================================================== */
/* Ascender, arm, and stem are the same shapes */
.front {
  background: var(--_front-color);
  clip-path: polygon(0 0, 100% 100%, 0 100%);
  width: 1em;
  height: 1em;
  transform: var(--_center-face) translateZ(calc(var(--_depth) / 2));
}

.side-01 {
  background: var(--_sides-gradient);
  width: var(--_depth);
  height: 1em;
  transform: var(--_center-face) translate(-0.5em, 0) rotateY(-90deg) rotateZ(180deg);
}

.side-02 {
  background: var(--_sides-gradient);
  width: var(--_depth);
  height: 1em;
  transform: var(--_center-face) translate(0, 0.5em) rotateY(90deg)
    rotateX(-90deg);
}

.side-03 {
  background: var(--_sides-gradient);
  width: var(--_depth);
  height: 1.414em;
  transform: var(--_center-face) rotateZ(45deg) rotateY(90deg) rotateX(90deg);
}

#ascender {
  --_depth: var(--_ascender-depth);

  transform: translate(-0.707em, -0.707em) rotateZ(45deg) translateZ(var(--_ascender-pos));
}

#arm {
  --_depth: var(--_arm-depth);

  transform: rotateZ(-45deg) translateZ(var(--_arm-pos));
}

#stem {
  --_depth: var(--_stem-depth);

  transform: translate(-1.15em, 1.15em) rotateZ(-135deg) translateZ(var(--_stem-pos));
}

#leg {
  --_depth: var(--_leg-depth);

  transform: translate(0, calc(1.125 * 1.414em)) scale3d(125%, 125%, 100%)
    rotateZ(135deg) translateZ(var(--_leg-pos));

  .front {
    /* background-color: var(--_foreground-color); */
    clip-path: polygon(0 0, 50% 50%, 50% 100%, 0 100%);
    width: 1em;
    height: 1em;
    transform: var(--_center-face) translateZ(calc(var(--_depth) / 2));
  }

  .side-02 {
    height: calc(0.5em);
    transform: var(--_center-face) translate(-0.25em, 0.5em) rotateY(90deg)
      rotateX(-90deg);
  }

  .side-03 {
    height: 0.707em;
    transform: var(--_center-face) rotateZ(45deg) translate(-0.355em, 0)
      rotateY(90deg) rotateX(90deg);
  }

  .side-04 {
    background: var(--_sides-gradient);
    height: calc(0.5em);
    width: var(--_depth);

    transform: var(--_center-face) translate(0, 0.25em) rotateY(90deg);
  }
}

/* ========================================================================== */
/* # Hover states */
/* ========================================================================== */

@media (hover: hover) {
  details[name="nav"] {
    summary:hover {
      color: var(--foreground-color);
    }
    &[open] {
      summary:hover {
        color: var(--background-color);
      }
    }
    a {
      &:hover {
        color: var(--foreground-color);
        text-decoration: underline;
      }
    }
  }
}